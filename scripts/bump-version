#!/usr/bin/env bash
#
# Copyright 2018 by The Gardener Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

set -e

DIR="$( cd "$( dirname $( dirname "${BASH_SOURCE[0]}" ) )" && pwd )"

function get_version() {
  local frontendVersion=$(cat ${DIR}/frontend/package.json | jq -r .version)
  local backendVersion=$(cat ${DIR}/backend/package.json | jq -r .version)
  if [ "$frontendVersion" != "$backendVersion" ]
  then
    echo "Backend version '$backendVersion' and frontend version '$frontendVersion' are different"
    exit 1
  else
    echo "$frontendVersion"
  fi
}

function bump_version() {
  local version="$1"
  if [ -z "$version" ]
  then
    echo "New version could not be determined"
    exit 1
  fi
  # bump backend version
  sed -i -r "s/\"version\": *\".+\"/\"version\": \"$version\"/g" ${DIR}/backend/package.json
  npm i --prefix ${DIR}/backend
  git add ${DIR}/backend/package.json
  git add ${DIR}/backend/package-lock.json
  # bump frontend version
  sed -i -r "s/\"version\": *\".+\"/\"version\": \"$version\"/g" ${DIR}/frontend/package.json
  npm i --prefix ${DIR}/frontend
  git add ${DIR}/frontend/package.json
  git add ${DIR}/frontend/package-lock.json
  # commit changes
  git commit -m "bumped version to $version"
  git tag -a "$version" -m 'release version $version'
}

function bump_patch_version() {
  set -f
  local version=$(get_version)
  array=(${version//./ })
  array[2]=$((array[2] + 1))
  local newVersion="${array[@]}"
  bump_version "${newVersion// /.}"
}

function bump_minor_version() {
  set -f
  local version=$(get_version)
  array=(${version//./ })
  array[1]=$((array[1] + 1))
  array[2]=0
  local newVersion="${array[@]}"
  bump_version "${newVersion// /.}"
}

function bump_major_version() {
  set -f
  local version=$(get_version)
  array=(${version//./ })
  array[0]=$((array[0] + 1))
  array[1]=0
  array[2]=0
  local newVersion="${array[@]}"
  bump_version "${newVersion// /.}"
}

# Show help
function help() {
  echo -e "Usage: $(basename $0) (patch|minor|major|to <version>)"
  echo -e ""
  echo -e "Examples: $(basename $0) patch"
  echo -e "          $(basename $0) minor"
  echo -e "          $(basename $0) major"
  echo -e "          $(basename $0) to 1.3.4"
}

# Dispatch
function dispatch() {
  case $1 in
    "patch") bump_patch_version;;
    "minor") bump_minor_version;;
    "major") bump_major_version;;
    "to")    bump_version "$2";;
    *)       help; exit 0;;
  esac
}

# Entry point
dispatch ${@}